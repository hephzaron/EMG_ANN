# Disable sudo to speed up the build
sudo: false

env:
  global:
    CC_TEST_REPORTER_ID=TEST_REPORTER_ID

language: python

python:
  - 3.6
cache: pip

before_script:
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
  - chmod +x ./cc-test-reporter

script:
  - bundle exec rspec
  # Preferably you will run test-reporter on branch update events. But
  # if you setup travis to build PR updates only, you don't need to run
  # the line below
  - if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then ./cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT; fi
  # In the case where travis is setup to build PR updates only,
  # uncomment the line below
  - ./cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT

notifications:
  email: false
  webhooks: ["https://coveralls.io/webhook?repo_token=COVERALLS_REPO_TOKEN"]

before_install:
  - python --version
  - pip install -U pip
  - pip install -U pytest
  - pip install codecov

install:
  - pip install -r requirements.txt

script:
  - coverage run tests.py
  
after_success:
  - codecov 
  - istanbul-combine -d merged-coverage -p summary -r lcov coverage/coverage-*.json coverage/coverage-*.json
  - codeclimate-test-reporter < coverage/lcov.info
  - coveralls < coverage/lcov.info
  - ./cc-test-reporter format-coverage -t simplecov -o coverage/codeclimate.backend.json coverage/backend/.resultset.json # Format backend coverage
  - ./cc-test-reporter format-coverage -t lcov -o coverage/codeclimate.frontend.json coverage/frontend/lcov.info  # Format frontend coverage
  - ./cc-test-reporter sum-coverage coverage/codeclimate.*.json -p 2                  # Sum both coverage parts into coverage/codeclimate.json
  - if [[ "$TRAVIS_TEST_RESULT" == 0 ]]; then ./cc-test-reporter upload-coverage; fi  # Upload coverage/codeclimate.json